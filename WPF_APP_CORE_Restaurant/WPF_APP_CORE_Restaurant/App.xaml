<Application x:Class="WPF_APP_CORE_Restaurant.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WPF_APP_CORE_Restaurant"
             xmlns:com="clr-namespace:WPF_APP_CORE_Restaurant.Component">
    <Application.Resources>
        <LinearGradientBrush x:Key="primary-gradient">
            <GradientStop Color="#2C3E50" Offset="0" />
            <GradientStop Color="#4CA1AF" Offset="1" />
        </LinearGradientBrush>

        <SolidColorBrush Color="DarkCyan" x:Key="primary-color"/>
        <SolidColorBrush Color="White" x:Key="primary-text-color"/>

        <Style TargetType="{x:Type Button}" x:Key="btn">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource primary-text-color}"/>
            <Setter Property="Background" Value="{StaticResource primary-color}"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Padding" Value="10"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource primary-color}"/>
                    <Setter Property="Background" Value="{StaticResource primary-text-color}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="tab_page" TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Panel"
                                Height="40" 
                                MinWidth="150"
                                >
                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Panel" Property="Background" Value="White" />
                                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Panel" Property="Background" Value="Transparent" />
                                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{StaticResource primary-text-color}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="tabs" TargetType="{x:Type TabControl}" >
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <DockPanel KeyboardNavigation.TabNavigation="Local" 
                                   LastChildFill="True">
                            <TabPanel DockPanel.Dock="{TemplateBinding TabStripPlacement}"
                                    Name="HeaderPanel"
                                    Grid.Row="0"
                                    Panel.ZIndex="1" 
                                    IsItemsHost="True"
                                    KeyboardNavigation.TabIndex="1"
                                    Background="{StaticResource primary-color}"
                                />
                            <Border 
                                Name="Border" 
                                Background="Transparent"  
                                CornerRadius="0" 
                                BorderThickness="0">
                                <ContentPresenter 
                                    ContentSource="SelectedContent"/>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="40" />
            <Setter Property="FontWeight" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Border x:Name="columnHeaderBorder"
		                            BorderThickness="1"
                                    >
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
			                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                      />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Transparent"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}" Background="{StaticResource primary-color}">
                            <ContentPresenter HorizontalAlignment="Stretch" 
                                              RecognizesAccessKey="True" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MyCoolExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource primary-color}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" 
                                              ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                              Content="{TemplateBinding Header}" 
                                              DockPanel.Dock="Top" 
                                              Foreground="{StaticResource primary-text-color}" 
                                              FontWeight="{TemplateBinding FontWeight}" 
                                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" 
                                              FontStyle="{TemplateBinding FontStyle}" 
                                              FontStretch="{TemplateBinding FontStretch}" 
                                              FontSize="{TemplateBinding FontSize}" 
                                              FontFamily="{TemplateBinding FontFamily}" 
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                              Margin="0" 
                                              MinWidth="0" 
                                              MinHeight="0" 
                                              Padding="10" 
                                              Style="{StaticResource ExpanderDownHeaderStyle}" 
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              />
                                <Grid x:Name="ExpandSite" 
                                      Background="White"
                                      DockPanel.Dock="Bottom" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      Margin="{TemplateBinding Padding}" 
                                      Visibility="Collapsed" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Canvas>
                                        <Path Data="M 20,0 L 50,0 L35,10 z" 
                                              StrokeThickness="0" 
                                              Fill="{TemplateBinding Background}" 
                                              Stretch="None"/>
                                    </Canvas>
                                    <ContentPresenter Focusable="false" 
                                                      Margin="0,10,0,0"
                                                      TextBlock.Foreground="Black"/>
                                </Grid>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ListView}">
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid>
                            <ContentPresenter
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="Input-field">
            <Style.Setters>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="DarkCyan"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Background" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="btn-circle">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button" >
                        <Grid >
                            <Ellipse Name="circle" Fill="LightGray">
                                
                            </Ellipse>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="circle" Property="Fill" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="btn-circle-dark">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button" >
                        <Grid >
                            <Ellipse Name="circle" Fill="{StaticResource primary-color}">

                            </Ellipse>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="{StaticResource primary-text-color}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="CheckBox" x:Key="CircleCheckbox">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Ellipse x:Name="outerEllipse" Fill="LightGray">
                            </Ellipse>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="outerEllipse" Property="Fill" Value="DarkCyan"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="outerEllipse" Property="Fill" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="outerEllipse" Property="Fill" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="cels">
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
    </Application.Resources>
</Application>
